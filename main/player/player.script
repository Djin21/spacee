local min_x = 10
local max_x = 620
local SPEED = 380
local MAX_X = 512
local MIN_X = 0
local enable_shoot = false

function init(self)
	msg.post(".", "acquire_input_focus")
	self.pos = go.get_position()
	self.score = 0
	self.enable_action = true
	local function myCallback(obj, handle, elapsed)
		if (self.enable_action == false) then
			timer.cancel(handle)
		end
		if (enable_shoot == true) then
			factory.create("#shoot_factory", self.pos + vmath.vector3(0, 0, 0))
		end
	end
	
	timer.delay(0.2, true, myCallback)
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	self.pos = go.get_position()
end

function fixed_update(self, dt)
	-- This function is only called if 'Use Fixed Timestep' is enabled in the Physics section of game.project
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	if (message_id == hash("add_score")) then
		self.score = self.score + message.points
		msg.post("/menu#menu", "refresh_score", {score = self.score})
	end
	if message_id == hash("collision_response") then
		msg.post("/menu#menu", "enemy_attack")
	end
end

function on_input(self, action_id, action)
	if (action.x and action.y) and (action.released == false) then
		local p = go.get_position()
		local pos = vmath.vector3(action.x, action.y, 0.9)
		if (action.x <= min_x) then
			pos.x = min_x
		end
		if (action.x >= max_x) then
			pos.x = max_x
		end
		go.set_position(pos)
		if (enable_shoot == false) then
			enable_shoot = true
		end
	else
		enable_shoot = false
	end
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
